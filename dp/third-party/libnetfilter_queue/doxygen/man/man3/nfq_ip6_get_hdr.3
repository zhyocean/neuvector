.TH "IPv6 helper functions" 3 "Mon Sep 13 2021" "Version 1.0.5" "libnetfilter_queue" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IPv6 helper functions \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "struct ip6_hdr * \fBnfq_ip6_get_hdr\fP (struct pkt_buff *pktb)"
.br
.ti -1c
.RI "int \fBnfq_ip6_set_transport_header\fP (struct pkt_buff *pktb, struct ip6_hdr *ip6h, uint8_t target)"
.br
.ti -1c
.RI "int \fBnfq_ip6_mangle\fP (struct pkt_buff *pktb, unsigned int dataoff, unsigned int match_offset, unsigned int match_len, const char *rep_buffer, unsigned int rep_len)"
.br
.ti -1c
.RI "int \fBnfq_ip6_snprintf\fP (char *buf, size_t size, const struct ip6_hdr *ip6h)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "struct ip6_hdr* nfq_ip6_get_hdr (struct pkt_buff *pktb)"
nfq_ip6_get_hdr - get IPv6 header 
.PP
\fBParameters:\fP
.RS 4
\fIpktb\fP Pointer to user-space network packet buffer
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to IPv6 header if a valid header found, else NULL\&. 
.RE
.PP

.PP
Definition at line 36 of file ipv6\&.c\&.
.SS "int nfq_ip6_mangle (struct pkt_buff *pktb, unsigned intdataoff, unsigned intmatch_offset, unsigned intmatch_len, const char *rep_buffer, unsigned intrep_len)"
nfq_ip6_mangle - mangle IPv6 packet buffer 
.PP
\fBParameters:\fP
.RS 4
\fIpktb\fP Pointer to user-space network packet buffer 
.br
\fIdataoff\fP Offset to layer 4 header 
.br
\fImatch_offset\fP Offset to content that you want to mangle 
.br
\fImatch_len\fP Length of the existing content you want to mangle 
.br
\fIrep_buffer\fP Pointer to data you want to use to replace current content 
.br
\fIrep_len\fP Length of data you want to use to replace current content 
.RE
.PP
\fBReturns:\fP
.RS 4
1 for success and 0 for failure\&. See \fBpktb_mangle()\fP for failure case 
.RE
.PP
\fBNote:\fP
.RS 4
This function updates the IPv6 length (if necessary) 
.RE
.PP

.PP
Definition at line 142 of file ipv6\&.c\&.
.SS "int nfq_ip6_set_transport_header (struct pkt_buff *pktb, struct ip6_hdr *ip6h, uint8_ttarget)"
nfq_ip6_set_transport_header - set transport header pointer for IPv6 packet 
.PP
\fBParameters:\fP
.RS 4
\fIpktb\fP Pointer to user-space network packet buffer 
.br
\fIip6h\fP Pointer to IPv6 header 
.br
\fItarget\fP Protocol number to find transport header (ie\&. IPPROTO_*)
.RE
.PP
\fBReturns:\fP
.RS 4
1 if the protocol has been found and the transport header has been set, else 0\&. 
.RE
.PP

.PP
Definition at line 64 of file ipv6\&.c\&.
.SS "int nfq_ip6_snprintf (char *buf, size_tsize, const struct ip6_hdr *ip6h)"
nfq_ip6_snprintf - print IPv6 header into one buffer in iptables LOG format 
.PP
\fBParameters:\fP
.RS 4
\fIbuf\fP Pointer to buffer that is used to print the object 
.br
\fIsize\fP Size of the buffer (or remaining room in it)\&. 
.br
\fIip6h\fP Pointer to a valid IPv6 header\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
same as snprintf 
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBsnprintf\fP(3) 
.RE
.PP

.PP
Definition at line 169 of file ipv6\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libnetfilter_queue from the source code\&.

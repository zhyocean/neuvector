.TH "Printing [DEPRECATED]" 3 "Mon Sep 13 2021" "Version 1.0.5" "libnetfilter_queue" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Printing [DEPRECATED] \- 
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBnfq_snprintf_xml\fP (char *buf, size_t rem, struct nfq_data *tb, int flags)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Function Documentation"
.PP 
.SS "int nfq_snprintf_xml (char *buf, size_trem, struct nfq_data *tb, intflags)"
nfq_snprintf_xml - print the enqueued packet in XML format into a buffer 
.PP
\fBParameters:\fP
.RS 4
\fIbuf\fP The buffer that you want to use to print the logged packet 
.br
\fIrem\fP The size of the buffer that you have passed 
.br
\fItb\fP Netlink packet data handle passed to callback function 
.br
\fIflags\fP The flag that tell what to print into the buffer
.RE
.PP
This function supports the following flags: 
.PP
.nf
 - NFQ_XML_HW: include the hardware link layer address
 - NFQ_XML_MARK: include the packet mark
 - NFQ_XML_DEV: include the device information
 - NFQ_XML_PHYSDEV: include the physical device information
 - NFQ_XML_PAYLOAD: include the payload (in hexadecimal)
 - NFQ_XML_TIME: include the timestamp
 - NFQ_XML_ALL: include all the logging information (all flags set)

.fi
.PP
.PP
You can combine this flags with an binary OR\&.
.PP
\fBReturns:\fP
.RS 4
-1 in case of failure, otherwise the length of the string that would have been printed into the buffer (in case that there is enough room in it)\&. See snprintf() return value for more information\&. 
.RE
.PP

.PP
Definition at line 1378 of file libnetfilter_queue\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libnetfilter_queue from the source code\&.
